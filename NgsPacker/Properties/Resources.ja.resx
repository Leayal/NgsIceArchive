<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="HomeText" xml:space="preserve">
    <value>ホーム</value>
  </data>
  <data name="VisitText" xml:space="preserve">
    <value>プロジェクトサイトへ</value>
  </data>
  <data name="ToggleThemeText" xml:space="preserve">
    <value>ダークテーマ</value>
  </data>
  <data name="ToggleDarkThemeTooltip" xml:space="preserve">
    <value>ダークテーマに切り替える</value>
  </data>
  <data name="LanguageText" xml:space="preserve">
    <value>言語</value>
  </data>
  <data name="NotifyCompleteText" xml:space="preserve">
    <value>完了時に通知を出す</value>
  </data>
  <data name="NotifyCompleteTooltip" xml:space="preserve">
    <value>処理完了時にデスクトップ通知を出します。</value>
  </data>
  <data name="WhiteListText" xml:space="preserve">
    <value>グループ1に分類するファイル
（後方一致・改行区切り）</value>
  </data>
  <data name="UnpackText" xml:space="preserve">
    <value>アンパック</value>
  </data>
  <data name="PackText" xml:space="preserve">
    <value>パック</value>
  </data>
  <data name="PackDialogText" xml:space="preserve">
    <value>パックしたいファイルを含むディレクトリを選択してください。</value>
  </data>
  <data name="UnpackDialogText" xml:space="preserve">
    <value>アンパックしたい*.iceファイルを選択してください。</value>
  </data>
  <data name="SaveAsDialogText" xml:space="preserve">
    <value>保存先を指定してください。</value>
  </data>
  <data name="PackingText" xml:space="preserve">
    <value>パックしています...</value>
  </data>
  <data name="UnpackingText" xml:space="preserve">
    <value>アンパックしています...</value>
  </data>
  <data name="ErrorTitleText" xml:space="preserve">
    <value>エラー</value>
  </data>
  <data name="IceFileFilterText" xml:space="preserve">
    <value>PSO2のデータファイル (*.ice)|*.ice</value>
  </data>
  <data name="CompleteText" xml:space="preserve">
    <value>処理が完了しました。</value>
  </data>
  <data name="ModdingWarningText" xml:space="preserve">
    <value>ゲームデータを改変する行為(Modding)は、過去の裁判の判例から特許法および、著作権法における同一性保持権の侵害にはあたらず、表現の自由の範疇にあります。しかしながら、Modは潜在的にゲーム環境に損害を与える可能性がある行為であり、バンされる可能性があるということについて留意してください。特に非公開の内部データの開いた場所での不特定多数へ配布や流用は明確に規約違反となり、訴えられる可能性があります。その事によって生じたいかなる損害について作者は一切の責任を負いません。
使用は自己責任でお願いします。</value>
  </data>
  <data name="PackInformationText" xml:space="preserve">
    <value>PSO2のModを作成する場合は「パック」をクリックしてディレクトリを選択してください。既存のファイルと同じ構成で改変したデータを作成することでModを作成できます。
※Modの有効化には、別途サードパーティー製ランチャーが必要です。</value>
  </data>
  <data name="UnpackInformationText" xml:space="preserve">
    <value>PSO2のデータファイルを解凍する場合は、「アンパック」ボタンをクリックしてデータファイルを選択し、次のダイアログで出力先のディレクトリを選択してください。</value>
  </data>
  <data name="AboutText" xml:space="preserve">
    <value>バージョン情報</value>
  </data>
  <data name="SegaCopyrightNotice" xml:space="preserve">
    <value>『PSO2』で使用している著作物（画像、データ、音声、テキスト等）の一切の権利は、株式会社セガまたはそのライセンサーが保有しております。</value>
  </data>
  <data name="SepareteByGroupCheckBoxText" xml:space="preserve">
    <value>グループによって出力先ディレクトリを分ける</value>
  </data>
  <data name="SepareteByGroupCheckBoxToolTip" xml:space="preserve">
    <value>PSO2のデータファイルは、拡張子やファイル名によって2つのグループに別れています。このチェックボックスをチェックすると、アンパック時に「group1」と「group2」というサブディレクトリが作成され、ファイルの所属先によって振り分けられます。</value>
  </data>
  <data name="CompressCheckboxText" xml:space="preserve">
    <value>圧縮</value>
  </data>
  <data name="CryptCheckBoxText" xml:space="preserve">
    <value>暗号化（非推奨）</value>
  </data>
  <data name="ExportFileListText" xml:space="preserve">
    <value>ファイル一覧を出力</value>
  </data>
  <data name="ExportFileListInformationText" xml:space="preserve">
    <value>PSO2のdataディレクトリ内にあるwin32（PSO2のデータ）か、win32_reboot（PSO2NGSのデータ）ディレクトリを選択してください。</value>
  </data>
  <data name="Pso2BinPathText" xml:space="preserve">
    <value>pso2_binのパス：</value>
  </data>
  <data name="BrowseText" xml:space="preserve">
    <value>選択...</value>
  </data>
  <data name="SettingsSavedText" xml:space="preserve">
    <value>設定を保存しました。</value>
  </data>
  <data name="SelectPso2BinPathText" xml:space="preserve">
    <value>pso2_binディレクトリ（pso2.exeが存在するディレクトリ）を選択してください。</value>
  </data>
  <data name="Pso2ExeNotFoundErrorText" xml:space="preserve">
    <value>pso2.exeが見つかりません。
正しいディレクトリを選択してください。</value>
  </data>
  <data name="UnpackOutputPathText" xml:space="preserve">
    <value>ファイルの出力先を指定してください。</value>
  </data>
  <data name="PackInputPathText" xml:space="preserve">
    <value>パックしたいファイルの入ったフォルダを指定してください。</value>
  </data>
</root>