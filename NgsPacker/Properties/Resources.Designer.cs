//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace NgsPacker.Properties {
    using System;
    
    
    /// <summary>
    ///   ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
    /// </summary>
    // このクラスは StronglyTypedResourceBuilder クラスが ResGen
    // または Visual Studio のようなツールを使用して自動生成されました。
    // メンバーを追加または削除するには、.ResX ファイルを編集して、/str オプションと共に
    // ResGen を実行し直すか、または VS プロジェクトをビルドし直します。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NgsPacker.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   すべてについて、現在のスレッドの CurrentUICulture プロパティをオーバーライドします
        ///   現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   About に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AboutText {
            get {
                return ResourceManager.GetString("AboutText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   型 System.Drawing.Bitmap のローカライズされたリソースを検索します。
        /// </summary>
        public static System.Drawing.Bitmap AppIcon {
            get {
                object obj = ResourceManager.GetObject("AppIcon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   The process is complete. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CompleteText {
            get {
                return ResourceManager.GetString("CompleteText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Compress に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CompressCheckboxText {
            get {
                return ResourceManager.GetString("CompressCheckboxText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Crypt (not recommended) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CryptCheckBoxText {
            get {
                return ResourceManager.GetString("CryptCheckBoxText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Error に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ErrorTitleText {
            get {
                return ResourceManager.GetString("ErrorTitleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Export Filelist に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportFileListText {
            get {
                return ResourceManager.GetString("ExportFileListText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Home に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HomeText {
            get {
                return ResourceManager.GetString("HomeText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   PSO2 Data File (*.ice)|*.ice に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string IceFileFilterText {
            get {
                return ResourceManager.GetString("IceFileFilterText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Language に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LanguageText {
            get {
                return ResourceManager.GetString("LanguageText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The act of modifying game data (Modding) does not infringe the right to retain identity under the Patent Law and Copyright Law from the precedents of past trials, and is within the scope of freedom of expression. However, keep in mind that mods are potentially damaging to the gaming environment and can be banned. In particular, distribution or diversion of private internal data to an unspecified number of people in an open place clearly violates the rules and may be sued. The author does not take any respon [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ModdingWarningText {
            get {
                return ResourceManager.GetString("ModdingWarningText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Notify when completed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotifyCompleteText {
            get {
                return ResourceManager.GetString("NotifyCompleteText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   A desktop notification is issued when the process is completed. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotifyCompleteTooltip {
            get {
                return ResourceManager.GetString("NotifyCompleteTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Select the directory that contains the files you want to pack. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PackDialogText {
            get {
                return ResourceManager.GetString("PackDialogText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   To create a PSO2 mod, click &quot;Pack&quot; and select a directory. You can create a mod by creating modified data with the same structure as an existing file.
        ///* A separate third-party launcher is required to activate the mod. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PackInformationText {
            get {
                return ResourceManager.GetString("PackInformationText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Packing... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PackingText {
            get {
                return ResourceManager.GetString("PackingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Pack に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PackText {
            get {
                return ResourceManager.GetString("PackText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Please specify the save destination. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SaveAsDialogText {
            get {
                return ResourceManager.GetString("SaveAsDialogText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SaveText {
            get {
                return ResourceManager.GetString("SaveText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   All rights to the copyrighted works (images, data, audios, texts, etc.) used in &quot;PSO2: NGS&quot; are owned by SEGA Corporation or its licensors. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SegaCopyrightNotice {
            get {
                return ResourceManager.GetString("SegaCopyrightNotice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Separate output directories by group に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SepareteByGroupCheckBoxText {
            get {
                return ResourceManager.GetString("SepareteByGroupCheckBoxText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   PSO2 data files are divided into two groups according to extension and file name. If you check this checkbox, subdirectories &quot;group1&quot; and &quot;group2&quot; will be created at the time of unpacking and sorted according to the file affiliation. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SepareteByGroupCheckBoxToolTip {
            get {
                return ResourceManager.GetString("SepareteByGroupCheckBoxToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle dark theme に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleDarkThemeTooltip {
            get {
                return ResourceManager.GetString("ToggleDarkThemeTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Dark Theme に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleThemeText {
            get {
                return ResourceManager.GetString("ToggleThemeText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Select the * .ice file you want to unpack. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string UnpackDialogText {
            get {
                return ResourceManager.GetString("UnpackDialogText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   To unzip the PSO2 data file, click the &quot;Unpack&quot; button, select the data file, and select the output destination directory in the next dialog. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string UnpackInformationText {
            get {
                return ResourceManager.GetString("UnpackInformationText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Unpacking... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string UnpackingText {
            get {
                return ResourceManager.GetString("UnpackingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Unpack に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string UnpackText {
            get {
                return ResourceManager.GetString("UnpackText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Visit Project Site に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string VisitText {
            get {
                return ResourceManager.GetString("VisitText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   File name to classify into group 1
        ///(last match, Line break delimiter) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WhiteListText {
            get {
                return ResourceManager.GetString("WhiteListText", resourceCulture);
            }
        }
    }
}
